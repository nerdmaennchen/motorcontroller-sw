
#include "BLDCInterface.h"
#include <unistd.h>

#include <vector>

struct Note {
	int frequency, duration, pauseAfter;
};
static const std::vector<Note> g_music_short =
{
	{660, 100, 150},
	{660, 100, 300},
	{660, 100, 300},
	{510, 100, 100},
	{660, 100, 300},
	{770, 100, 550},
	{380, 100, 575}
};

static const std::vector<Note> g_mario_long =
{
	{660, 100, 150},
	{660, 100, 300},
	{660, 100, 300},
	{510, 100, 100},
	{660, 100, 300},
	{770, 100, 550},
	{380, 100, 575},

	{510, 100, 450},
	{380, 100, 400},
	{320, 100, 500},
	{440, 100, 300},
	{480, 80, 330},
	{450, 100, 150},
	{430, 100, 300},
	{380, 100, 200},
	{660, 80, 200},
	{760, 50, 150},
	{860, 100, 300},
	{700, 80, 150},
	{760, 50, 350},
	{660, 80, 300},
	{520, 80, 150},
	{580, 80, 150},
	{480, 80, 500},

	{510, 100, 450},
	{380, 100, 400},
	{320, 100, 500},
	{440, 100, 300},
	{480, 80, 330},
	{450, 100, 150},
	{430, 100, 300},
	{380, 100, 200},
	{660, 80, 200},
	{760, 50, 150},
	{860, 100, 300},
	{700, 80, 150},
	{760, 50, 350},
	{660, 80, 300},
	{520, 80, 150},
	{580, 80, 150},
	{480, 80, 500},

	{500, 100, 300},

	{760, 100, 100},
	{720, 100, 150},
	{680, 100, 150},
	{620, 150, 300},

	{650, 150, 300},
	{380, 100, 150},
	{430, 100, 150},

	{500, 100, 300},
	{430, 100, 150},
	{500, 100, 100},
	{570, 100, 220},

	{500, 100, 300},

	{760, 100, 100},
	{720, 100, 150},
	{680, 100, 150},
	{620, 150, 300},

	{650, 200, 300},

	{1020, 80, 300},
	{1020, 80, 150},
	{1020, 80, 300},

	{380, 100, 300},
	{500, 100, 300},

	{760, 100, 100},
	{720, 100, 150},
	{680, 100, 150},
	{620, 150, 300},

	{650, 150, 300},
	{380, 100, 150},
	{430, 100, 150},

	{500, 100, 300},
	{430, 100, 150},
	{500, 100, 100},
	{570, 100, 420},

	{585, 100, 450},

	{550, 100, 420},

	{500, 100, 360},

	{380, 100, 300},
	{500, 100, 300},
	{500, 100, 150},
	{500, 100, 300},

	{500, 100, 300},

	{760, 100, 100},
	{720, 100, 150},
	{680, 100, 150},
	{620, 150, 300},

	{650, 150, 300},
	{380, 100, 150},
	{430, 100, 150},

	{500, 100, 300},
	{430, 100, 150},
	{500, 100, 100},
	{570, 100, 220},

	{500, 100, 300},

	{760, 100, 100},
	{720, 100, 150},
	{680, 100, 150},
	{620, 150, 300},

	{650, 200, 300},

	{1020, 80, 300},
	{1020, 80, 150},
	{1020, 80, 300},

	{380, 100, 300},
	{500, 100, 300},

	{760, 100, 100},
	{720, 100, 150},
	{680, 100, 150},
	{620, 150, 300},

	{650, 150, 300},
	{380, 100, 150},
	{430, 100, 150},

	{500, 100, 300},
	{430, 100, 150},
	{500, 100, 100},
	{570, 100, 420},

	{585, 100, 450},

	{550, 100, 420},

	{500, 100, 360},

	{380, 100, 300},
	{500, 100, 300},
	{500, 100, 150},
	{500, 100, 300},

	{500, 60, 150},
	{500, 80, 300},
	{500, 60, 350},
	{500, 80, 150},
	{580, 80, 350},
	{660, 80, 150},
	{500, 80, 300},
	{430, 80, 150},
	{380, 80, 600},

	{500, 60, 150},
	{500, 80, 300},
	{500, 60, 350},
	{500, 80, 150},
	{580, 80, 150},
	{660, 80, 550},

	{870, 80, 325},
	{760, 80, 600},

	{500, 60, 150},
	{500, 80, 300},
	{500, 60, 350},
	{500, 80, 150},
	{580, 80, 350},
	{660, 80, 150},
	{500, 80, 300},
	{430, 80, 150},
	{380, 80, 600},

	{660, 100, 150},
	{660, 100, 300},
	{660, 100, 300},
	{510, 100, 100},
	{660, 100, 300},
	{770, 100, 550},
	{380, 100, 575}
};

static const std::vector<Note> g_korobeiniki =
{
	{1568, 500, 0},
	{1175, 250, 0},
	{1245, 250, 0},
	{1397, 500, 0},
	{1245, 250, 0},
	{1175, 250, 0},
	{1046, 500, 0},
	{1046, 250, 0},
	{1245, 250, 0},
	{1568, 500, 0},
	{1397, 250, 0},
	{1245, 250, 0},
	{1175, 750, 0},
	{1245, 250, 0},
	{1397, 500, 0},
	{1568, 500, 0},
	{1245, 250, 250},
	{1046, 250, 250},
	{1046, 250, 250},
	{35000, 500, 0},
	{35000, 250, 0},
	{1397, 750, 0},
	{1661, 250, 0},
	{2093, 500, 0},
	{1865, 250, 0},
	{1661, 250, 0},
	{1568, 750, 0},
	{1245, 250, 0},
	{1568, 500, 0},
	{1397, 250, 0},
	{1245, 250, 0},
	{1175, 500, 0},
	{1175, 250, 0},
	{1245, 250, 0},
	{1397, 500, 0},
	{1568, 500, 0},
	{1245, 500, 0},
	{1046, 250, 250},
	{1046, 250, 250},
	{35000, 500, 0}
};

int main(void) {
	bldcInterface::BLDCInterface iface;

	auto enMotorHandle  = iface.getHandle<uint8_t>("motor.enable", true);
	auto speedHandle    = iface.getHandle<float>("motor.target_frequency", true);
	auto steeringHandle = iface.getHandle<std::array<uint16_t, 2>>("servo.pwm_values", true);
	auto odometryHandle = iface.getHandle<int64_t>("hall.odometry", true);
	auto frequencyHandle = iface.getHandle<float>("pwm.frequency", true);

	float defaultFrequency = frequencyHandle;

	odometryHandle = 0LL;
	steeringHandle = {1000, 1500};

	enMotorHandle = 1;
	speedHandle  = 50;

	usleep(1000000);
	for (auto const& note : g_mario_long) {
		frequencyHandle = note.frequency * 1;
		usleep(note.duration * 1000);
		frequencyHandle = defaultFrequency;
		usleep(note.pauseAfter * 1000);
	}
	frequencyHandle = defaultFrequency;
	usleep(1000000);

	std::cout << "odometry: " << odometryHandle << std::endl;
	enMotorHandle = 0;
	return 0;
}

